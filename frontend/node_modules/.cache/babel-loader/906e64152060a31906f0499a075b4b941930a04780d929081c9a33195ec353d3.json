{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shris\\\\OneDrive\\\\Desktop\\\\Project\\\\SteelHacks XII\\\\SHProject\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  apiEndpoint\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: \"bot\",\n    text: \"Hello! How can I help you with your health today?\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    try {\n      const response = await fetch(apiEndpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        sender: \"bot\",\n        text: data.reply || \"Hmm, I didn't understand that. Try asking something else.\"\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Error: Could not reach server.\"\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg flex flex-col h-full max-h-[500px]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto mb-4 space-y-3\",\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${msg.sender === \"bot\" ? \"justify-start\" : \"justify-end\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-4 py-2 rounded-lg max-w-xs break-words ${msg.sender === \"bot\" ? \"bg-indigo-200 text-gray-900\" : \"bg-purple-500 text-white\"}`,\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n        placeholder: \"Ask about hydration, sun protection...\",\n        className: \"flex-1 px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"bg-indigo-500 hover:bg-indigo-600 text-white font-bold px-4 py-2 rounded-lg transition\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"F3y+6e7vZ3ds54e0gvmUcO9iyIY=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","apiEndpoint","_s","messages","setMessages","sender","text","input","setInput","sendMessage","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","err","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Shris/OneDrive/Desktop/Project/SteelHacks XII/SHProject/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Chatbot = ({ apiEndpoint }) => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: \"bot\", text: \"Hello! How can I help you with your health today?\" },\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(apiEndpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n      const data = await response.json();\r\n      const botMessage = { sender: \"bot\", text: data.reply || \"Hmm, I didn't understand that. Try asking something else.\" };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (err) {\r\n      setMessages((prev) => [...prev, { sender: \"bot\", text: \"Error: Could not reach server.\" }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 p-6 rounded-xl shadow-lg flex flex-col h-full max-h-[500px]\">\r\n      <div className=\"flex-1 overflow-y-auto mb-4 space-y-3\">\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} className={`flex ${msg.sender === \"bot\" ? \"justify-start\" : \"justify-end\"}`}>\r\n            <div className={`px-4 py-2 rounded-lg max-w-xs break-words ${\r\n              msg.sender === \"bot\" ? \"bg-indigo-200 text-gray-900\" : \"bg-purple-500 text-white\"\r\n            }`}>\r\n              {msg.text}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"flex gap-2\">\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n          placeholder=\"Ask about hydration, sun protection...\"\r\n          className=\"flex-1 px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:bg-gray-700 dark:text-white\"\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          className=\"bg-indigo-500 hover:bg-indigo-600 text-white font-bold px-4 py-2 rounded-lg transition\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CACvC;IAAEQ,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE;EAAoD,CAAC,CAC7E,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAW,GAAG;MAAEN,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEC;IAAM,CAAC;IACnDH,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;IAC7CH,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACb,WAAW,EAAE;QACxCc,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAEb;QAAM,CAAC;MACzC,CAAC,CAAC;MACF,MAAMc,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,MAAMC,UAAU,GAAG;QAAElB,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEe,IAAI,CAACG,KAAK,IAAI;MAA4D,CAAC;MACrHpB,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEW,UAAU,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZrB,WAAW,CAAEQ,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEP,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAE;MAAiC,CAAC,CAAC,CAAC;IAC7F;EACF,CAAC;EAED,oBACEP,OAAA;IAAK2B,SAAS,EAAC,uFAAuF;IAAAC,QAAA,gBACpG5B,OAAA;MAAK2B,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EACnDxB,QAAQ,CAACyB,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrB/B,OAAA;QAAe2B,SAAS,EAAE,QAAQG,GAAG,CAACxB,MAAM,KAAK,KAAK,GAAG,eAAe,GAAG,aAAa,EAAG;QAAAsB,QAAA,eACzF5B,OAAA;UAAK2B,SAAS,EAAE,6CACdG,GAAG,CAACxB,MAAM,KAAK,KAAK,GAAG,6BAA6B,GAAG,0BAA0B,EAChF;UAAAsB,QAAA,EACAE,GAAG,CAACvB;QAAI;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC,GALEJ,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMR,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnC,OAAA;MAAK2B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB5B,OAAA;QACEoC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE7B,KAAM;QACb8B,QAAQ,EAAGC,CAAC,IAAK9B,QAAQ,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIhC,WAAW,CAAC,CAAE;QACrDiC,WAAW,EAAC,wCAAwC;QACpDhB,SAAS,EAAC;MAAgK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3K,CAAC,eACFnC,OAAA;QACE4C,OAAO,EAAElC,WAAY;QACrBiB,SAAS,EAAC,wFAAwF;QAAAC,QAAA,EACnG;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CA1DIF,OAAO;AAAA4C,EAAA,GAAP5C,OAAO;AA4Db,eAAeA,OAAO;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}